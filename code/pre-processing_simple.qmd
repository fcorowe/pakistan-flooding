---
title: "Mapping flooding data"
subtitle: "Creating a single file from multiple files"
author: "Francisco Rowe"
format: html
editor: visual
---

```{r}
library(tidyverse)
library(fs)
library(here)
library(sf)
library(viridis)
library(viridisLite)
library(mapdeck)
```

# Read and show file names

```{r}
file_list <- fs::dir_ls("../data/movement")
```

# Read data into a single data frame, including filename
```{r}
big_df <- file_list %>% 
  map_df(read_csv, .id = "filename")
str(big_df)
```

Create time variable
```{r}
big_df$hour <- lubridate::hour(big_df$date_time)
```


# Single date 

## Filter data
```{r}
 map_df <- big_df %>% dplyr::filter(ds == "2022-08-29") %>% 
   mutate(stroke = log(n_crisis / 50))  %>% 
   dplyr::filter(!is.na(n_crisis))
```





```{r}
key <- 'pk.eyJ1IjoiZmNvcm93ZSIsImEiOiJja2Jyc2Qxd2QyNngwMndwOTVxa3B2bjBpIn0.vA3y1-WhmI_W3NxCKlILzw' ## put your own token here

flowmap <- mapdeck( token = key, style = mapdeck_style("outdoors"),
                location = c(64.3, 29.4), zoom = 20, pitch = 45) %>%
  add_arc(
    data = map_df,
    layer_id = "arc_layer",
    origin = c("start_lon", "start_lat"),
    destination = c("end_lon", "end_lat"),
    #stroke_from = "start_polygon_name",
    #stroke_to = "end_polygon_name",
    stroke_width = "stroke",
    palette = "viridis",
    #legend = list( stroke_from = F, stroke_to = F ),
  )

# plot the interactive map
flowmap
```
# Aggregate

```{r}
aux_df <- big_df %>% 
  group_by(start_polygon_id, end_polygon_id) %>% 
  dplyr::summarise( sum_flows = sum(n_difference, na.rm = T),
                    mean_flows = mean(n_difference, na.rm = T)
                    ) %>% 
  ungroup()

coordinates <- big_df %>% 
  dplyr::select( c(start_polygon_id, end_polygon_id, start_latitude, start_longitude, end_latitude, end_longitude) )

aux_df2 <- left_join(aux_df, big_df, by = c("start_polygon_id" = "start_polygon_id", "end_polygon_id" = "end_polygon_id") )

map_df <- distinct(aux_df2, 
         sum_flows, 
         .keep_all = TRUE)
  
```

```{r}

flowmap <- map_df %>% 
  mutate(stroke = mean_flows / 40 )  %>% 
  dplyr::filter(!is.na(mean_flows)) %>% 
mapdeck( token = key, style = mapdeck_style("outdoors"),
                location = c(64.3, 29.4), zoom = 20, pitch = 45) %>%
  add_arc(
    origin = c("start_lon", "start_lat"),
    destination = c("end_lon", "end_lat"),
    stroke_width = "stroke"
  )

# plot the interactive map
flowmap
```


# Animated map
# Filter data
```{r}
map_df <- big_df %>% #dplyr::filter(ds == "2022-08-29") %>% 
  mutate(stroke = n_crisis / 1000)  %>% 
  dplyr::filter(!is.na(n_crisis))
```


```{r}
animated_flowmap <- mapdeck( token = key, style = mapdeck_style("dark"),
                location = c(64.3, 29.4), zoom = 20, pitch = 45) %>%
  add_animated_arc(
    data = map_df,
    layer_id = "arc_layer",
    origin = c("start_lon", "start_lat"),
    destination = c("end_lon", "end_lat"),
    stroke_from = "start_polygon_name",
    stroke_to = "end_polygon_name",
    stroke_width = "stroke",
    palette = "inferno",
    legend = list( stroke_from = F, stroke_to = F ),
    trail_length = 5
  )

# plot the interactive map
animated_flowmap
```






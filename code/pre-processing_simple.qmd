---
title: "Mapping flooding data"
subtitle: "Creating a single file from multiple files"
author: "Francisco Rowe"
format: html
editor: visual
---

```{r}
library(tidyverse)
library(fs)
library(here)
library(sf)
library(viridis)
library(viridisLite)
library(mapdeck)
```

# Read and show file names

```{r}
rm(list=ls())
file_list <- fs::dir_ls("../data/movement")
```

# Read data into a single data frame, including filename

```{r, warning=FALSE}
big_df <- file_list %>% 
  map_df(read_csv, .id = "filename", 
        col_types = cols(date_time = col_date(),
                         ds = col_date() ))
str(big_df)
```

## Check for what dates labels are not similar
```{r}
duplicate_dates <- big_df %>% dplyr::filter(!is.na(start_latitude)) %>% 
 distinct(ds)
```


## Make labels consistent
```{r}
try <-big_df %>% 
  transform(start_lat = ifelse(ds == duplicate_dates$ds, start_latitude, start_lat),
            start_lon = ifelse(ds == duplicate_dates$ds, start_longitude, start_lon),
            end_lat = ifelse(ds == duplicate_dates$ds, end_latitude, end_lat),
            end_lon = ifelse(ds == duplicate_dates$ds, end_longitude, end_lon),
            clipped_z_score = ifelse(clipped_z_score == duplicate_dates$ds, z_score, clipped_z_score)
            )
```


Create time variable

```{r}
big_df$hour <- lubridate::hour(big_df$date_time)
```

# Single date

## Filter data

```{r}
 map_df <- big_df %>% dplyr::filter(ds == "2022-08-25") %>% 
   mutate(stroke = log(n_crisis / 10))  %>% 
   dplyr::filter(!is.na(n_crisis)) %>% 
  dplyr::filter(start_polygon_name!=end_polygon_name)
```

```{r}
key <- 'pk.eyJ1IjoiZmNvcm93ZSIsImEiOiJja2Jyc2Qxd2QyNngwMndwOTVxa3B2bjBpIn0.vA3y1-WhmI_W3NxCKlILzw' ## put your own token here

flowmap <- mapdeck( token = key, style = mapdeck_style("outdoors"),
                location = c(64.3, 29.4), zoom = 20, pitch = 45) %>%
  add_arc(
    data = map_df,
    layer_id = "arc_layer",
    origin = c("start_lon", "start_lat"),
    destination = c("end_lon", "end_lat"),
    #stroke_from = "start_polygon_name",
    #stroke_to = "end_polygon_name",
    stroke_width = "stroke",
    palette = "viridis",
    #legend = list( stroke_from = F, stroke_to = F ),
  )

# plot the interactive map
flowmap
```

# Aggregate

```{r}
aux_df <- big_df %>% 
  group_by(start_polygon_id, end_polygon_id) %>% 
  dplyr::summarise( sum_flows = sum(n_difference, na.rm = T),
                    mean_flows = mean(n_difference, na.rm = T)
                    ) %>% 
  ungroup()

# coordinates <- big_df %>% 
#   dplyr::filter(!is.na(n_baseline)) %>% 
#   dplyr::select( c(start_polygon_id, end_polygon_id, start_lat, start_lon, end_lat, end_lon) )

coordinates <- unique(big_df[, c("start_polygon_id", 
                         "end_polygon_id", 
                         "start_lat", 
                         "start_lon", 
                         "end_lat", 
                         "end_lon",
                        "n_baseline",
                        "n_crisis",
                        "n_difference",
                        "clipped_z_score")]) %>% 
  dplyr::filter(!is.na(n_baseline))

aux_df2 <- left_join(aux_df, coordinates, 
                     by = c("start_polygon_id" = "start_polygon_id", 
                            "end_polygon_id" = "end_polygon_id") 
                     )

map_df <- distinct(aux_df2, 
         start_polygon_id, end_polygon_id, 
         .keep_all = TRUE) %>% 
  dplyr::filter(!is.na(n_baseline))

glimpse(map_df)
```

```{r}
flowmap <- map_df %>% 
  #dplyr::filter(clipped_z_score >= 2 | clipped_z_score <= -2) %>% 
  mutate(stroke = mean_flows / 100 )  %>% 
mapdeck( token = key, style = mapdeck_style("outdoors"),
                location = c(64.3, 29.4), zoom = 20, pitch = 45) %>%
  add_arc(
    origin = c("start_lon", "start_lat"),
    destination = c("end_lon", "end_lat"),
    stroke_width = "stroke"
  )

# plot the interactive map
flowmap
```

# Animated map

# Filter data

```{r}
map_df <- big_df %>% #dplyr::filter(ds == "2022-08-29") %>% 
  mutate(stroke = n_crisis / 1000)  %>% 
  dplyr::filter(!is.na(n_crisis))
```

```{r}
animated_flowmap <- mapdeck( token = key, style = mapdeck_style("dark"),
                location = c(64.3, 29.4), zoom = 20, pitch = 45) %>%
  add_animated_arc(
    data = map_df,
    layer_id = "arc_layer",
    origin = c("start_lon", "start_lat"),
    destination = c("end_lon", "end_lat"),
    stroke_from = "start_polygon_name",
    stroke_to = "end_polygon_name",
    stroke_width = "stroke",
    palette = "inferno",
    legend = list( stroke_from = F, stroke_to = F ),
    trail_length = 5
  )

# plot the interactive map
animated_flowmap
```
